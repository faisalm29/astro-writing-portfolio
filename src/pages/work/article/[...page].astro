---
import { getCollection } from "astro:content";
import type { PaginateFunction } from "astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import Search from "@components/Search.astro";

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const articles = await getCollection("article", ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true;
  });

  const sortedArticles = articles.sort(
    (a, b) =>
      Date.parse(b.data.publishedDate) - Date.parse(a.data.publishedDate)
  );

  const articlePages = [...sortedArticles];

  return paginate(articlePages, {
    pageSize: 1,
  });
}

const { page } = Astro.props;
---

<BaseLayout title="Article">
  <h1>{page.currentPage}</h1>
  <ul>
    {
      page.data.map((article) => (
        <li>
          <a class="article-link" href={`/work/article/${article.id}`}>{article.data.title}</a>
          <ul>
            {article.data.categories.map((category) => (
              <li>{category}</li>
            ))}
          </ul>
        </li>
        <time>{new Date(article.data.publishedDate).toLocaleDateString("en-US", {
          day: "numeric",
          month: "long",
          year: "numeric"
        })}</time>
      ))
    }
  </ul>

  {page.url.first ? <a href={page.url.first}>First</a> : null}
  {page.url.prev ? <a href={page.url.prev}>Previous</a> : null}
  {page.url.next ? <a href={page.url.next}>Next</a> : null}
  {page.url.last ? <a href={page.url.last}>Last</a> : null}

  <Search/>
</BaseLayout>