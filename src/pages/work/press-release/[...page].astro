---
import { getCollection } from "astro:content";
import type { PaginateFunction } from "astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import Search from "@components/Search.astro";
import ArticleCard from "@components/ArticleCard.astro";
import Button from "@components/Button.astro";

export async function getStaticPaths({
  paginate,
}: {
  paginate: PaginateFunction;
}) {
  const releases = await getCollection("release", ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true;
  });

  const sortedReleases = releases.sort(
    (a, b) =>
      Date.parse(b.data.publishedDate) - Date.parse(a.data.publishedDate)
  );

  const releasePages = [...sortedReleases];

  return paginate(releasePages, {
    pageSize: 6,
  });
}

const { page } = Astro.props;
---

<BaseLayout title="Press Release">
  <div class="mt-32 mb-32 md:mt-48 md:mb-48 lg:mt-64 lg:mb-64">
    <h1
      class="text-3xl font-bold text-center mb-16 md:text-4xl after:content-['(featured)'] after:mt-2 after:block after:text-base after:font-normal after:font-serif after:italic lg:after:inline lg:text-5xl lg:after:mt-4 lg:after:absolute"
    >
      Press Release
    </h1>
    <div class="flex justify-center mb-8">
      <Search />
    </div>
    <ul
      class="px-[5vw] pt-24 border-t-[1px] border-secondary md:pt-32 grid md:grid-cols-8 lg:grid-cols-12 gap-y-32 md:gap-x-16"
    >
      {
        page.data.map((release) => (
          <li class="col-span-4">
            <ArticleCard
              thumbnail={release.data.thumbnail}
              title={release.data.title}
              category="press release"
              date={release.data.publishedDate}
              id={`/work/press-release/${release.id}`}
            />
          </li>
        ))
      }
    </ul>

    <div class="mt-24 flex justify-center gap-4">
      {page.url.first ? <Button url={page.url.first}>First</Button> : null}
      {page.url.prev ? <Button url={page.url.prev}>Previous</Button> : null}
      <Button url={page.url.current}>{page.currentPage}</Button>
      {page.url.next ? <Button url={page.url.next}>Next</Button> : null}
      {page.url.last ? <Button url={page.url.last}>Last</Button> : null}
    </div>
  </div>
</BaseLayout>
