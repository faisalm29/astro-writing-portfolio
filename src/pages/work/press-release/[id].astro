---
import { getCollection, render } from "astro:content";
import { Image } from "astro:assets";
import BaseLayout from "@layouts/BaseLayout.astro";
import Prose from "@components/Prose.astro";

export async function getStaticPaths() {
  const releases = await getCollection("release", ({ data }) => {
    return import.meta.env.PROD ? data.draft !== true : true;
  });

  return releases.map((release) => ({
    params: {
      id: release.id,
    },
    props: {
      release,
    },
  }));
}

const { release } = Astro.props;
const { Content } = await render(release);
---

<BaseLayout
  title={release.data.title}
  description={release.data.description}
  ogImg={release.data.thumbnail}
>
  <article class="mb-32 mt-32 px-[5vw] md:mb-48 lg:mb-64">
    <div class="mb-12">
      <div class="mb-12">
        <p class="text-center uppercase tracking-[0.08em]">article</p>
        <h1 class="mb-2 text-center text-3xl font-bold">
          {release.data.title}
        </h1>
        <div class="flex justify-center">
          <time class="font-serif italic"
            >{
              new Date(release.data.publishedDate).toLocaleDateString("en-US", {
                day: "numeric",
                month: "long",
                year: "numeric",
              })
            }</time
          >
        </div>
      </div>

      <div class="flex justify-center">
        <Image
          src={release.data.thumbnail}
          alt={`${release.data.title} thumbnail`}
          width="500"
          height="250"
        />
      </div>
    </div>

    <Prose>
      <Content />

      <p>This press release was also published on:</p>
      <ul>
        {
          release.data.releaseAt.map((source) => (
            <li>
              <a href={source.url} target="_blank">
                {source.name}
              </a>
            </li>
          ))
        }
      </ul>
    </Prose>
  </article>
</BaseLayout>
